name: Create Release

env:
  BUILD_TYPE: Release

on:
  push:
    tags:
      - v*

jobs:
  ubuntu_clang:
    name: ubuntu-clang
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v2

    - name: Create Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: CC=clang cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build Sources
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ubuntu-clang
        path: |
          ${{runner.workspace}}/build/bsdiff
          ${{runner.workspace}}/build/bspatch
          ${{runner.workspace}}/build/libbsdiff.a

  windows_msvc:
    name: windows-msvc
    runs-on: windows-2019

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v2
      
    - name: Build Dependencies
      run: vcpkg.exe install bzip2:x64-windows

    - name: Create Environment
      run: cmake -E make_directory "${{runner.workspace}}\build"

    - name: Configure CMake
      working-directory: ${{runner.workspace}}\build
      run: cmake "${env:GITHUB_WORKSPACE}" -DCMAKE_BUILD_TYPE="${env:BUILD_TYPE}" -DCMAKE_TOOLCHAIN_FILE="$(Split-Path $(where.exe vcpkg.exe))\scripts\buildsystems\vcpkg.cmake"

    - name: Build Sources
      working-directory: ${{runner.workspace}}\build
      run: cmake --build . --config "${env:BUILD_TYPE}"

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows-msvc
        path: ${{runner.workspace}}\build\${{env.BUILD_TYPE}}

  create_release:
    name: Create Release
    needs: [ubuntu-clang, windows_msvc]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
    
    - name: Retrieve artifacts [windows-msvc]
      uses: actions/download-artifact@v2
      with:
        name: windows-msvc
        path: ${{runner.workspace}}/windows-msvc

    - name: Retrieve artifacts [ubuntu-clang]
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-clang
        path: ${{runner.workspace}}/ubuntu-clang

    - name: Pack artifacts
      working-directory: ${{runner.workspace}}/bsdiff-windows
      run: |
        zip bsdiff-windows.zip windows-msvc/*
        tar czf bsdiff-ubuntu.tgz ubuntu-clang/* --transform='s/^ubuntu-clang/bsdiff/g'

    - name: Publish artifacts [windows-msvc]
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ${{runner.workspace}}/bsdiff-windows.zip
        asset_name: bsdiff-windows.zip
        asset_content_type: application/zip

    - name: Publish artifacts [ubuntu-clang]
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ${{runner.workspace}}/bsdiff-ubuntu.zip
        asset_name: bsdiff-ubuntu.tgz
        asset_content_type: application/gzip
